{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "InTotoStatementV1",
  "description": "Represents an In-Toto v1 statement.",
  "type": "object",
  "required": [
    "_type",
    "predicate",
    "predicateType",
    "subject"
  ],
  "properties": {
    "_type": {
      "type": "string",
      "format": "uri"
    },
    "predicate": {
      "$ref": "#/definitions/Predicate"
    },
    "predicateType": {
      "type": "string",
      "format": "uri"
    },
    "subject": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Subject"
      }
    }
  },
  "definitions": {
    "BuildDefinition": {
      "description": "A structure representing the build definition of the SLSA Provenance v1 Predicate.",
      "type": "object",
      "required": [
        "buildType",
        "externalParameters"
      ],
      "properties": {
        "buildType": {
          "type": "string",
          "format": "uri",
          "description": "Identifies the template for how to perform the build and interpret the parameters and dependencies.\n\nThe URI SHOULD resolve to a human-readable specification that includes: overall description of the build type; schema for externalParameters and internalParameters; unambiguous instructions for how to initiate the build given this BuildDefinition, and a complete example.\nExample:  https://slsa-framework.github.io/github-actions-buildtypes/workflow/v1"
        },
        "external_parameters": {
          "type": "object",
          "description": "The parameters that are under external control, such as those set by a user or tenant of the build platform. They MUST be complete at SLSA Build L3, meaning that there is no additional mechanism for an external party to influence the build. (At lower SLSA Build levels, the completeness MAY be best effort.)\nThe build platform SHOULD be designed to minimize the size and complexity of externalParameters, in order to reduce fragility and ease verification. Consumers SHOULD have an expectation of what “good” looks like; the more information that they need to check, the harder that task becomes.\nVerifiers SHOULD reject unrecognized or unexpected fields within externalParameters."
        },
        "internal_parameters": {
          "type": "object",
          "description": "Unordered collection of artifacts needed at build time. Completeness is best effort, at least through SLSA Build L3. For example, if the build script fetches and executes “example.com/foo.sh”, which in turn fetches “example.com/bar.tar.gz”, then both “foo.sh” and “bar.tar.gz” SHOULD be listed here."
        },
        "resolvedDependencies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceDescriptor"
          }
        }
      }
    },
    "Builder": {
      "description": "A structure representing the builder information of the SLSA Provenance v1 Predicate.",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "builderDependencies": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/ResourceDescriptor"
          }
        },
        "id": {
          "type": "string",
          "format": "uri"
        },
        "version": {
          "type": [
            "object",
            "null"
          ]
        }
      }
    },
    "DigestSet": {
      "description": "Represents a set of digests, mapping algorithms to their respective digest strings.",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "BuildMetadata": {
      "description": "A structure representing the metadata of the SLSA Provenance v1 Predicate.",
      "type": "object",
      "required": [
        "invocationId",
        "startedOn"
      ],
      "properties": {
        "finishedOn": {
          "type": [
            "string",
            "null"
          ],
          "format": "date-time"
        },
        "invocationId": {
          "type": "string"
        },
        "startedOn": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Predicate": {
      "description": "An enum representing different predicate types.\n\nKnown predicate types have their own variants, while unknown types are represented by the `Other` variant, which stores the raw JSON value.\n\nTODO(mlieberman85): Support (de)serializing the predicates based on the predicateType URL in the statement.",
      "anyOf": [
        {
          "$ref": "#/definitions/SLSAProvenanceV1Predicate"
        },
        true
      ]
    },
    "ResourceDescriptor": {
      "description": "A size-efficient description of any software artifact or resource (mutable or immutable)",
      "type": "object",
      "required": [
        "uri"
      ],
      "properties": {
        "annotations": {
          "type": "object"
        },
        "content": {
          "type": "string",
          "format": "byte"
        },
        "digest": {
          "type": [
            "object",
            "null"
          ],
          "additionalProperties": {
            "type": "string"
          }
        },
        "downloadLocation": {
          "type": "string",
          "format": "uri"
        },
        "mediaType": {
          "type": [
            "string",
            "null"
          ]
        },
        "name": {
          "type": [
            "string",
            "null"
          ]
        },
        "uri": {
          "type": "string",
          "format": "uri"
        }
      }
    },
    "RunDetails": {
      "description": "A structure representing the run details of the SLSA Provenance v1 Predicate.",
      "type": "object",
      "required": [
        "builder",
        "metadata"
      ],
      "properties": {
        "builder": {
          "$ref": "#/definitions/Builder",
          "description": "Identifies the build platform that executed the invocation, which is trusted to have correctly performed the operation and populated this provenance."
        },
        "byproducts": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "$ref": "#/definitions/ResourceDescriptor"
          },
          "description": "Additional artifacts generated during the build that are not considered the “output” of the build but that might be needed during debugging or incident response. For example, this might reference logs generated during the build and/or a digest of the fully evaluated build configuration.\nIn most cases, this SHOULD NOT contain all intermediate files generated during the build. Instead, this SHOULD only contain files that are likely to be useful later and that cannot be easily reproduced."
        },
        "metadata": {
          "$ref": "#/definitions/BuildMetadata",
          "description": "Metadata about this particular execution of the build."
        }
      }
    },
    "SLSAProvenanceV1Predicate": {
      "description": "A structure representing the SLSA Provenance v1 Predicate.",
      "type": "object",
      "required": [
        "buildDefinition",
        "runDetails"
      ],
      "properties": {
        "buildDefinition": {
          "$ref": "#/definitions/BuildDefinition"
        },
        "runDetails": {
          "$ref": "#/definitions/RunDetails"
        }
      }
    },
    "Subject": {
      "description": "Represents a subject in an In-Toto v1 statement.",
      "type": "object",
      "required": [
        "digest",
        "name"
      ],
      "properties": {
        "digest": {
          "$ref": "#/definitions/DigestSet"
        },
        "name": {
          "type": "string"
        }
      }
    }
  }
}
